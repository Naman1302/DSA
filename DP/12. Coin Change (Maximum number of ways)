https://leetcode.com/problems/coin-change-2/

//similar to count number of subsets with given sum in 0-1 Knapsack

class Solution {
public:
    int change(int sum, vector<int>& coins) {
        int n=coins.size();
        int dp[n+1][sum+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(j==0)
                    dp[i][j]=1;
                else if(i==0)
                    dp[i][j]=0;
                else{
                    if(coins[i-1]<=j){
                        dp[i][j]=dp[i][j-coins[i-1]]+dp[i-1][j];
                    }
                    else
                        dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[n][sum];
    }
};
