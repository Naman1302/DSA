
class Solution {
public:
    int solve(vector<int> &nums,int sum,int n){
        int dp[n+1][sum+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(j==0)
                    dp[i][j]=1;
                else if(i==0)
                    dp[i][j]=0;
                else{
                    if(nums[i-1]<=j)
                        dp[i][j]=1+max(dp[i-1][j-nums[i-1]],dp[i-1][j]);
                    else
                        dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[n][sum];
    }
    int findTargetSumWays(vector<int>& nums, int target) {
        int count=0;
        for(int i=0;i<nums.size();i++){
            count+=nums[i];
        }
        if(target>count||(count+target)%2!=0)
            return 0;
        count=(target+count)/2;
            return solve(nums,count,nums.size());
    }
};
