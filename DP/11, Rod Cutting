https://practice.geeksforgeeks.org/problems/cutted-segments1642/1#

class Solution
{
    public:
    int solve(vector<int> &a,int sum,int n){
        int dp[n+1][sum+1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=sum;j++){
                if(i==0)
                    dp[i][j]=INT_MIN; // as we are maximising the numer of rods so if there isn't any then we go for INT_MIN
                else if(j==0)
                    dp[i][j]=0;
                else{
                    if(a[i-1]<=j)
                        dp[i][j]=max(1+dp[i][j-a[i-1]] , dp[i-1][j]); //here we do +1 as each cut would increse th count of segments and if we don't choose it then no increase in segment
                    else
                        dp[i][j]=dp[i-1][j];
                }        
            }
        }
        return dp[n][sum]<0 ? 0 : dp[n][sum];
    }
    //Function to find the maximum number of cuts.
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        vector<int> a={x,y,z};
        return solve(a,n,a.size());
    }
};
